import streamlit as st
import uuid


def login_page():
    # Customer login form as sidebar and enable session tabs only when the username is entered
    if 'acknowledged' not in st.session_state:
        st.session_state.acknowledged = False

    with st.sidebar:
        logo_col, _ = st.columns([30, 1])

        with logo_col:
            st.title("✨ DevGenius App")
            st.title("Acknowledge")

            acknowledged = st.checkbox(
                "I acknowledge that I have read the disclaimer and agree to the terms and conditions",
                key="acknowledged",
                label_visibility="visible"
            )

            submit = st.button(
                "Let's Build AWS Solutions",
                disabled=not (acknowledged)
            )

            if submit:
                st.session_state.conversation_id = str(uuid.uuid4())
                st.session_state.user_authenticated = True
                st.rerun()

    # Description and Disclaimer
    # Main page content
    st.markdown("<h1 style='text-align: center;'>Welcome to DevGenius App</h1>", unsafe_allow_html=True)

    # Description section
    st.header("Description")
    st.write("""
    DevGenius is your AI-powered companion for AWS solution architecture, designed to streamline and enhance your cloud development process. Our innovative platform empowers you to effortlessly design AWS architectures tailored to your specific requirements, ensuring that your cloud infrastructure aligns perfectly with your project goals. 
    With DevGenius, you can seamlessly generate infrastructure as code using powerful tools like AWS CDK and AWS CloudFormation, enabling faster deployment and easier management of your cloud resources. We also provide accurate cost estimates for AWS resources, helping you optimize your budget and make informed decisions. Moreover, DevGenius adheres to AWS Well-Architected best practices, ensuring that your solutions are not only efficient and cost-effective but also secure, reliable, and operationally excellent. 

    Whether you're a seasoned AWS professional or just starting your cloud journey, DevGenius is your go-to tool for building robust, scalable, and innovative AWS solutions.
    """)  # noqa

    # Add some space between sections
    st.markdown("---")

    # Disclaimer section
    st.header("Disclaimers")
    st.write("""
    - AI-Generated Content: DevGenius app utilizes uses Claude via Bedrock to generate responses. While we strive for accuracy, the information provided may not always be complete, up-to-date, or error-free.

    - Not a Substitute for Professional Advice: The responses generated by DevGenius should not be considered as professional, legal, medical, financial, or expert advice. Always consult with qualified professionals for specific guidance in these areas.
    - Potential Biases: Despite our best efforts to minimize biases, the AI may inadvertently reflect biases present in its training data or algorithmic design.
    - Privacy and Data Usage: User interactions with DevGenius may be logged and analyzed for improvement purposes.
    - No Guarantee of Availability or Performance: We do not guarantee uninterrupted access to the chatbot or error-free operation.
    - Disclaimer of Liability: AWS is not liable for any damages or losses resulting from the use of or reliance on information provided by DevGenius.
    - User Responsibility: Users are responsible for evaluating the appropriateness and accuracy of the DevGenius's responses for their specific needs and circumstances.
    - Intellectual Property: The chatbot's responses may not be used to infringe on any intellectual property rights.
    - Updates to Disclaimer: This disclaimer may be updated periodically. Please review it regularly for any changes.
    - The solutions provided are recommendations based on common architectural patterns
    - All generated code should be reviewed before deployment
    - Cost implications should be evaluated before implementing any solution
    - This tool is meant to assist in architecture design but does not replace proper planning and testing

    By using this DevGenius, you acknowledge that you have read, understood, and agreed to this disclaimer.
    """)  # noqa

    # Optional: Add styling for better visual hierarchy
    st.markdown("""
        <style>
        .main h1 {
            color: #2E4B7C;
        }
        .main h2 {
            color: #4A4A4A;
            margin-top: 2rem;
        }
        </style>
    """, unsafe_allow_html=True)


def welcome_sidebar():
    logo_col, _ = st.columns([3, 1])

    with logo_col:
        # st.image("images/DevGenius.JPG", width=150)
        st.title("✨ DevGenius App")
    # Add a horizontal line for visual separation
        st.divider()
        # Add custom CSS for button styling and text handling
        st.markdown("""
            <style>
            .stButton button {
                background-color: #4CAF50; /* Blue background color */
                color: black; /* Black text for contrast */
                font-size: 18px; /* Set font size */
                padding: 20px 50px; /* Add padding for larger button */
                border-radius: 8px; /* Rounded corners */
                width: auto; /* Let the width adjust based on the text */
                text-align: center; /* Center the text inside the button */
                white-space: nowrap; /* Prevent text from wrapping */
                font-weight: bold; /* Make the text bold */
                display: inline-block; /* Ensure the button is inline-block */
            }
            </style>
        """, unsafe_allow_html=True)

        if st.button("New Session", use_container_width=True):
            st.session_state.user_authenticated = False
            st.session_state.messages = []
            st.session_state.mod_messages = []
            st.rerun()
        
        st.divider()
    # Bottom divider and session ID
    # st.divider()
    # st.write(f"SessionID: {st.session_state.conversation_id}")
    # Add the CSS style
    st.markdown("""
        <style>
            .small-font {
                font-size: 12px;
                color: #666;
                margin: 0;
            }
        </style>
    """, unsafe_allow_html=True)

    # Use the class
    st.markdown(f"""
        <p class='small-font'>
            SessionID: {st.session_state.conversation_id}
        </p>
    """, unsafe_allow_html=True)


def create_tabs():
    """Create and return the Streamlit tabs."""
    # tabs = st.tabs(["Build a solution", "Modify your existing architecture", "Modify AWS solutions"])
    tabs = st.tabs(["Build a solution", "Modify your existing architecture"])
    return tabs


def create_option_tabs():
    """Create and return the Streamlit tabs for the various options supported by DevGenius."""
    tabs = st.tabs(["Cost Estimates", "Architecture diagram", "CDK code", "CloudFormation code", "Terraform code", "Technical documentation"])  # noqa
    return tabs
